/* soapBaitourServiceSoapService.h
   Generated by gSOAP 2.8.16 from baitour.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapBaitourServiceSoapService_H
#define soapBaitourServiceSoapService_H
#include "soapH.h"
class SOAP_CMAC BaitourServiceSoapService
{ public:
	struct soap *soap;
	bool own;
	/// Constructor
	BaitourServiceSoapService();
	/// Constructor to use/share an engine state
	BaitourServiceSoapService(struct soap*);
	/// Constructor with engine input+output mode control
	BaitourServiceSoapService(soap_mode iomode);
	/// Constructor with engine input and output mode control
	BaitourServiceSoapService(soap_mode imode, soap_mode omode);
	/// Destructor, also frees all deserialized data
	virtual ~BaitourServiceSoapService();
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to defaults
	virtual	void reset();
	/// Initializer used by constructor
	virtual	void BaitourServiceSoapService_init(soap_mode imode, soap_mode omode);
	/// Create a copy
	virtual	BaitourServiceSoapService *copy() SOAP_PURE_VIRTUAL;
	/// Close connection (normally automatic)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Return sender-related fault to sender
	virtual	int soap_senderfault(const char *string, const char *detailXML);
	/// Return sender-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Return receiver-related fault to sender
	virtual	int soap_receiverfault(const char *string, const char *detailXML);
	/// Return receiver-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Run simple single-thread iterative service on port until a connection error occurs (returns error code or SOAP_OK), use this->bind_flag = SO_REUSEADDR to rebind for a rerun
	virtual	int run(int port);
	/// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET bind(const char *host, int port, int backlog);
	/// Accept next request (returns socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET accept();
#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
	/// Then accept SSL handshake, when SSL is used
	virtual	int ssl_accept();
#endif
	/// Serve this request (returns error code or SOAP_OK)
	virtual	int serve();
	/// Used by serve() to dispatch a request (returns error code or SOAP_OK)
	virtual	int dispatch();

	///
	/// Service operations (you should define these):
	/// Note: compile with -DWITH_PURE_VIRTUAL for pure virtual methods
	///

	/// Web service operation 'GetAllCommonPolicy' (returns error code or SOAP_OK)
	virtual	int GetAllCommonPolicy(_ns1__GetAllCommonPolicy *ns1__GetAllCommonPolicy, _ns1__GetAllCommonPolicyResponse *ns1__GetAllCommonPolicyResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAllCommonPolicyZIP' (returns error code or SOAP_OK)
	virtual	int GetAllCommonPolicyZIP(_ns1__GetAllCommonPolicyZIP *ns1__GetAllCommonPolicyZIP, _ns1__GetAllCommonPolicyZIPResponse *ns1__GetAllCommonPolicyZIPResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAlterCommonPolicy' (returns error code or SOAP_OK)
	virtual	int GetAlterCommonPolicy(_ns1__GetAlterCommonPolicy *ns1__GetAlterCommonPolicy, _ns1__GetAlterCommonPolicyResponse *ns1__GetAlterCommonPolicyResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'MatchCommonPolicy' (returns error code or SOAP_OK)
	virtual	int MatchCommonPolicy(_ns1__MatchCommonPolicy *ns1__MatchCommonPolicy, _ns1__MatchCommonPolicyResponse *ns1__MatchCommonPolicyResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAVPolicy' (returns error code or SOAP_OK)
	virtual	int GetAVPolicy(_ns1__GetAVPolicy *ns1__GetAVPolicy, _ns1__GetAVPolicyResponse *ns1__GetAVPolicyResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetDomesticMatchNormalZRateByID' (returns error code or SOAP_OK)
	virtual	int GetDomesticMatchNormalZRateByID(_ns1__GetDomesticMatchNormalZRateByID *ns1__GetDomesticMatchNormalZRateByID, _ns1__GetDomesticMatchNormalZRateByIDResponse *ns1__GetDomesticMatchNormalZRateByIDResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DetailCreateOrder' (returns error code or SOAP_OK)
	virtual	int DetailCreateOrder(_ns1__DetailCreateOrder *ns1__DetailCreateOrder, _ns1__DetailCreateOrderResponse *ns1__DetailCreateOrderResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'RTCreateOrder' (returns error code or SOAP_OK)
	virtual	int RTCreateOrder(_ns1__RTCreateOrder *ns1__RTCreateOrder, _ns1__RTCreateOrderResponse *ns1__RTCreateOrderResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetOrderInfo' (returns error code or SOAP_OK)
	virtual	int GetOrderInfo(_ns1__GetOrderInfo *ns1__GetOrderInfo, _ns1__GetOrderInfoResponse *ns1__GetOrderInfoResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetInvalidationProviders' (returns error code or SOAP_OK)
	virtual	int GetInvalidationProviders(_ns1__GetInvalidationProviders *ns1__GetInvalidationProviders, _ns1__GetInvalidationProvidersResponse *ns1__GetInvalidationProvidersResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'RefundOrder' (returns error code or SOAP_OK)
	virtual	int RefundOrder(_ns1__RefundOrder *ns1__RefundOrder, _ns1__RefundOrderResponse *ns1__RefundOrderResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetChangeFlightDate' (returns error code or SOAP_OK)
	virtual	int GetChangeFlightDate(_ns1__GetChangeFlightDate *ns1__GetChangeFlightDate, _ns1__GetChangeFlightDateResponse *ns1__GetChangeFlightDateResponse) SOAP_PURE_VIRTUAL;
};
#endif
